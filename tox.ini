[tox]
skipsdist=True
envlist=
    lint,
    python{3.8}-django{3.2}-wagtail{3.0},
    python{3.11}-django{4.1}-wagtail{4.1,4.2,5.0,5.1},
    python{3.11}-django{4.2}-wagtail{5.0,5.1},
    coverage

[testenv]
install_command=pip install -e ".[testing]" -U {opts} {packages}
commands=
    python -b -m coverage run --parallel-mode --source='wagtailsharing' {toxinidir}/testmanage.py test {posargs}

basepython=
    python3.8: python3.8
    python3.11: python3.11

deps=
    django3.2: Django>=3.2,<3.3
    django4.1: Django>=4.1,<4.2
    wagtail3.0: wagtail>=3.0,<4.0
    wagtail4.1: wagtail>=4.1,<4.2
    wagtail4.2: wagtail>=4.2,<4.3
    wagtail5.0: wagtail>=5.0,<5.1
    wagtail5.1: wagtail>=5.1,<5.2

[testenv:lint]
basepython=python3.8
deps=
    black
    ruff
    isort
commands=
    black --check wagtailsharing setup.py testmanage.py
    ruff wagtailsharing testmanage.py
    isort --check-only --diff wagtailsharing testmanage.py

[testenv:coverage]
basepython=python3.8
deps=
    coverage[toml]
    diff_cover
commands=
    coverage combine
    coverage report -m
    coverage xml
    diff-cover coverage.xml --compare-branch=origin/main --fail-under=100

[isort]
combine_as_imports=1
lines_after_imports=2
include_trailing_comma=1
multi_line_output=3
skip=.tox,migrations
use_parentheses=1
known_django=django
known_wagtail=wagtail
default_section=THIRDPARTY
sections=FUTURE,STDLIB,DJANGO,WAGTAIL,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[testenv:interactive]
basepython=python3.8
deps=
    Django>=3.2,<3.3

commands_pre=
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py shell -c "from wagtailsharing.models import SharingSite;(not SharingSite.objects.filter(site_id=1).exists()) and SharingSite.objects.create(site_id=1, hostname='sharing.localhost', port=8000)"

commands=
    {posargs:python testmanage.py runserver 0.0.0.0:8000}

setenv=
    INTERACTIVE=1
